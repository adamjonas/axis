// -----------------------------------------------------
// Gradients
// -----------------------------------------------------

// Mixin: Gradient
// Takes two colors and outputs a vertical gradient that fades between the two colors.
// ex. gradient(#EB8468, #BA6952)

gradient(color1, color2)
  background: color1
  background: color2 linear-gradient(top, color1, color2) repeat-x
  if pie-enabled
    -pie-background: unquote('linear-gradient(top,') color1 unquote(' 0%, ') color2 unquote('color2 100%)')
    pie()

// Mixin: Simple Gradient
// Takes one color and an optional strength. Darkens and lightens the color according to the strength
// and creates a gradient between those two values, the average being the originally passed color.
// Higher strength will result in a more strongly contrasted gradient
// ex. simple-gradient(#EB8468)
// ex. simple-gradient(#61D464, 20%)

simple-gradient(color, strength = 10%)
  start = lighten(color, strength)
  end = darken(color, strength)
  gradient(start, end)

// Mixin: Noise Gradient
// Exactly the same as the gradient mixin, but overlays a very light noise to give it more texture.
// ex. noise-gradient(#EB8468, #BA6952)

noise-gradient(color1, color2, imagePath = 'noise.png')
  background: color1
  background: url(img-path imagePath) repeat, color2 linear-gradient(top, color1, color2) repeat-x
  if pie-enabled
    -pie-background: unquote('linear-gradient(top,') color1 unquote(' 0%, ') color2 unquote('color2 100%)')
    pie()

// Mixin: Simple Noise Gradient
// Exactly like simple gradient, but overlays a very light noise to give it more texture.
// ex. simple-noise-gradient(#EB8468, #BA6952)

simple-noise-gradient(color, strength = 10%, imagePath = 'noise.png')
  start = lighten(color, strength)
  end = darken(color, strength)
  noise-gradient(start, end, imagePath)
